<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tangshengbo.dao.UserMapper">

    <resultMap id="BaseResultMap" type="com.tangshengbo.model.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="descn" property="descn" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, status, descn
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="getUserByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where username = #{userName,jdbcType=VARCHAR}
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.tangshengbo.model.User">
    insert into user (id, username, password, 
      status, descn)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{descn,jdbcType=VARCHAR})
  </insert>

    <insert id="insertSelective" parameterType="com.tangshengbo.model.User">

        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="descn != null">
                descn,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="descn != null">
                #{descn,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tangshengbo.model.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="descn != null">
                descn = #{descn,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tangshengbo.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      descn = #{descn,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO user(username,PASSWORD,STATUS,descn)
        <foreach collection="list" item="item" index="index"  separator="union all">
            select
            #{item.username,jdbcType=VARCHAR},
            #{item.password,jdbcType=VARCHAR},
            #{item.status,jdbcType=INTEGER},
            #{item.descn,jdbcType=VARCHAR}
            from dual
        </foreach>
    </insert>
    <update id="updateBatch"  parameterType="java.util.List">
        <foreach collection="list" item="item" index="index"  separator=";">
            update user set
            username = #{item.username,jdbcType=VARCHAR},
            password = #{item.password,jdbcType=VARCHAR},
            status = #{item.status,jdbcType=INTEGER},
            descn = #{item.descn,jdbcType=VARCHAR}
            where id = #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>

<!--
  mybatis Oracle 批量插入，批量更新
    <insert id="insertBatch" parameterType="java.util.List">
        INSERT INTO T_CITY_INDEX(
        id,city_code
        )
        select SEQ_CITY_INDEX.NEXTVAL,cd.* from(
        <foreach collection="list" item="item" index="index"  close=")" open="(" separator="union">
            select
            #{item.cityCode,jdbcType=VARCHAR},
            #{item.cityName,jdbcType=VARCHAR}
            from dual
        </foreach>
        ) cd
    </insert>

    2、批量跟新

    <update id="updateBatch"  parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="begin" close=";end;" separator=";">
            update T_CITY_INDEX t
            set
            t.city_name= #{item.cityName,jdbcType=VARCHAR} ,
            t.district_name= #{item.districtName,jdbcType=VARCHAR} ,
            where t.id = #{item.id,jdbcType=NUMERIC}
        </foreach>
    </update>-->

</mapper>